services:
    app:
        build:
            args:
                user: bm
                uid: 1000
            context: ./
            dockerfile: ./docker/Dockerfile
        environment:
          DB_HOST: mysql
          DB_PORT: 3306
          DB_PASSWORD: ZvXzmqqZiFPfeFv8UW4rwdym
          APP_DEBUG: true
          AUTH_RATE_LIMIT_TIME: 60
        image: bm
        container_name: bm-app
        restart: unless-stopped
        working_dir: /var/www/
        volumes:
          - ./:/var/www
        networks:
          - bm
    nginx:
        image: nginx:alpine
        container_name: bm-nginx
        restart: unless-stopped
        ports:
            - 80:80
        volumes:
          - ./:/var/www
          - ./docker/nginx_dir/nginx_conf:/etc/nginx/conf.d/
          - ./docker/nginx_dir/certs:/etc/nginx/certs
        networks:
          - bm
    mysql:
        image: registry.abrbit.com/library/mariadb
        container_name: bm_db
        environment:
            MYSQL_DATABASE: bm
            MYSQL_ROOT_PASSWORD: ZvXzmqqZiFPfeFv8UW4rwdym
            MYSQL_PASSWORD: ZvXzmqqZiFPfeFv8UW4rwdym
            MYSQL_USER: bm
            MYSQL_ALLOW_EMPTY_PASSWORD: 'no'
        volumes:
            - db-1:/var/lib/mysql
        networks:
            - bm
        healthcheck:
            test: [ "CMD", "mysqladmin", "ping", "-p ZvXzmqqZiFPfeFv8UW4rwdym" , "-h", "localhost" ]
            retries: 3
            timeout: 5s
    redis:
        container_name: bm_redis
        image: registry.abrbit.com/bitnami/redis:latest
        ports:
            - '6379:6379'
        environment:
            - ALLOW_EMPTY_PASSWORD=yes
        networks:
            - bm
    phpmyadmin:
        container_name: bm_phpmyadmin
        image: registry.abrbit.com/library/phpmyadmin
        restart: always
        ports:
            - 20627:80
        environment:
            PMA_ARBITRARY: 1
            PMA_HOST: mysql
            UPLOAD_LIMIT: 300M
        networks:
            - bm
        depends_on:
            - mysql
    mongodbbn:
        image: mongo:latest
        container_name: mongodbbn
        restart: unless-stopped
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: root
        volumes:
            - mongodb_data:/data/db
        ports:
            - "27017:27017"
        networks:
            - bm
    mongo-expressbn:
        image: mongo-express:latest
        container_name: mongo-expressbn
        restart: unless-stopped
        ports:
            - "8081:8081"
        environment:
            ME_CONFIG_MONGODB_SERVER: mongodbbn  # Matches your MongoDB service name
            ME_CONFIG_MONGODB_ADMINUSERNAME: root
            ME_CONFIG_MONGODB_ADMINPASSWORD: root
            ME_CONFIG_BASICAUTH_USERNAME: admin  # Web UI login
            ME_CONFIG_BASICAUTH_PASSWORD: admin123  # Web UI password
        depends_on:
            - mongodbbn
        networks:
            - bm
    prometheusbn:
      image: prom/prometheus:latest
      container_name: prometheusbn
      volumes:
        - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      ports:
        - "9090:9090"
      networks:
        - bm

    grafanabn:
      image: grafana/grafana:latest
      container_name: grafanabn
      ports:
        - "3000:3000"
      volumes:
        - grafana-storage:/var/lib/grafana
      depends_on:
        - prometheusbn
      networks:
        - bm
networks:
    bm:
        driver: bridge

volumes:
    db-1:
    db-2:
    mongodb_data:
    grafana-storage:

