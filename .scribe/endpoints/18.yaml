name: UserSetting
description: ''
endpoints:
  -
    custom: []
    httpMethods:
      - GET
    uri: api/clients/user-settings
    metadata:
      custom: []
      groupName: UserSetting
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      deprecated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        custom: []
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
  -
    custom: []
    httpMethods:
      - POST
    uri: api/clients/user-settings
    metadata:
      custom: []
      groupName: UserSetting
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      deprecated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      settings:
        custom: []
        name: settings
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      settings.minimum_wallet:
        custom: []
        name: settings.minimum_wallet
        description: 'Must be at least 0.'
        required: true
        example: 27
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      settings.otp_telegram:
        custom: []
        name: settings.otp_telegram
        description: 'Must be at least 0. Must not be greater than 1.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
    cleanBodyParameters:
      settings:
        minimum_wallet: 27
        otp_telegram: 1
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
  -
    custom: []
    httpMethods:
      - PATCH
    uri: 'api/clients/user-settings/{id}'
    metadata:
      custom: []
      groupName: UserSetting
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      deprecated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        custom: []
        name: id
        description: 'The ID of the user setting.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      settings:
        custom: []
        name: settings
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      settings.minimum_wallet:
        custom: []
        name: settings.minimum_wallet
        description: 'Must be at least 0.'
        required: false
        example: 27
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      settings.otp_telegram:
        custom: []
        name: settings.otp_telegram
        description: 'Must be at least 0. Must not be greater than 1.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
    cleanBodyParameters:
      settings:
        minimum_wallet: 27
        otp_telegram: 1
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
  -
    custom: []
    httpMethods:
      - DELETE
    uri: 'api/clients/user-settings/{id}'
    metadata:
      custom: []
      groupName: UserSetting
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      deprecated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        custom: []
        name: id
        description: 'The ID of the user setting.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
