name: Cart
description: ''
endpoints:
  -
    custom: []
    httpMethods:
      - GET
    uri: 'api/cart/discount/{discount?}'
    metadata:
      custom: []
      groupName: Cart
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      deprecated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      discount:
        custom: []
        name: discount
        description: ''
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
    cleanUrlParameters:
      discount: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        custom: []
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
  -
    custom: []
    httpMethods:
      - POST
    uri: 'api/cart/delivery/{logistic_id}'
    metadata:
      custom: []
      groupName: Cart
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      deprecated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      logistic_id:
        custom: []
        name: logistic_id
        description: 'The ID of the logistic.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
    cleanUrlParameters:
      logistic_id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      date:
        custom: []
        name: date
        description: 'Must be a valid date.'
        required: true
        example: '2025-10-27T12:21:30'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      deliveryBetweenStart:
        custom: []
        name: deliveryBetweenStart
        description: 'Must be between 1 and 24 digits.'
        required: false
        example: '1374491711936806'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      deliveryBetweenEnd:
        custom: []
        name: deliveryBetweenEnd
        description: 'Must be between 1 and 24 digits.'
        required: false
        example: '1374491711936806'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      address_id:
        custom: []
        name: address_id
        description: ''
        required: true
        example: 4326.41688
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
    cleanBodyParameters:
      date: '2025-10-27T12:21:30'
      deliveryBetweenStart: '1374491711936806'
      deliveryBetweenEnd: '1374491711936806'
      address_id: 4326.41688
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
  -
    custom: []
    httpMethods:
      - POST
    uri: api/cart/checkout
    metadata:
      custom: []
      groupName: Cart
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      deprecated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      returnUrl:
        custom: []
        name: returnUrl
        description: 'This field is required when <code>bank</code> is present.'
        required: false
        example: 'http://www.bailey.biz/quos-velit-et-fugiat-sunt-nihil-accusantium-harum.html'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      bank:
        custom: []
        name: bank
        description: 'This field is required when <code>returnUrl</code> is present.'
        required: false
        example: mellat
        type: string
        enumValues:
          - saman
          - mellat
        exampleWasSpecified: false
        nullable: false
        deprecated: false
    cleanBodyParameters:
      returnUrl: 'http://www.bailey.biz/quos-velit-et-fugiat-sunt-nihil-accusantium-harum.html'
      bank: mellat
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
  -
    custom: []
    httpMethods:
      - GET
    uri: 'api/cart/all/{cart?}'
    metadata:
      custom: []
      groupName: Cart
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      deprecated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      cart:
        custom: []
        name: cart
        description: ''
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
    cleanUrlParameters:
      cart: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        custom: []
        status: 200
        content: '{"cart":{"items":[],"discount":null,"delivery":null,"details":{"saleId":null,"discountId":null,"price":0,"finalPrice":0,"finalPriceWithDelivery":0,"orderItems":[],"totalDiscount":0,"totalSale":0,"deliveryPrice":0}}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          balance: '0'
          x-ratelimit-limit: '6000'
          x-ratelimit-remaining: '5986'
          access-control-allow-origin: '*'
        description: null
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
  -
    custom: []
    httpMethods:
      - GET
    uri: 'api/cart/{product_id}/{cart?}'
    metadata:
      custom: []
      groupName: Cart
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      deprecated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      product_id:
        custom: []
        name: product_id
        description: 'The ID of the product.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      cart:
        custom: []
        name: cart
        description: ''
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
    cleanUrlParameters:
      product_id: 1
      cart: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        custom: []
        status: 400
        content: '{"message":"general.productTypeNotAllowed"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '6000'
          x-ratelimit-remaining: '5985'
          access-control-allow-origin: '*'
        description: null
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
  -
    custom: []
    httpMethods:
      - DELETE
    uri: 'api/cart/{product_id}/{cart?}'
    metadata:
      custom: []
      groupName: Cart
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      deprecated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      product_id:
        custom: []
        name: product_id
        description: 'The ID of the product.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      cart:
        custom: []
        name: cart
        description: ''
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
    cleanUrlParameters:
      product_id: 1
      cart: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
