## Autogenerated by Scribe. DO NOT MODIFY.

name: Comment
description: ''
endpoints:
  -
    custom: []
    httpMethods:
      - GET
    uri: api/comments
    metadata:
      custom: []
      groupName: Comment
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      deprecated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        custom: []
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
  -
    custom: []
    httpMethods:
      - POST
    uri: api/comments
    metadata:
      custom: []
      groupName: Comment
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      deprecated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      comment:
        custom: []
        name: comment
        description: 'Must be at least 10 characters. Must not be greater than 500 characters.'
        required: true
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      comment_id:
        custom: []
        name: comment_id
        description: 'The <code>id</code> of an existing record in the comments table.'
        required: false
        example: 4326.41688
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      model:
        custom: []
        name: model
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      id:
        custom: []
        name: id
        description: ''
        required: true
        example: 4326.41688
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
    cleanBodyParameters:
      comment: b
      comment_id: 4326.41688
      model: architecto
      id: 4326.41688
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
  -
    custom: []
    httpMethods:
      - PATCH
    uri: 'api/comments/status/{comment_id}'
    metadata:
      custom: []
      groupName: Comment
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      deprecated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      comment_id:
        custom: []
        name: comment_id
        description: 'The ID of the comment.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
    cleanUrlParameters:
      comment_id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      comment:
        custom: []
        name: comment
        description: 'Must be at least 10 characters. Must not be greater than 500 characters.'
        required: true
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
    cleanBodyParameters:
      comment: b
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
