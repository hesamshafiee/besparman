## Autogenerated by Scribe. DO NOT MODIFY.

name: Image
description: ''
endpoints:
  -
    custom: []
    httpMethods:
      - GET
    uri: 'api/images/get/{name}/{rand}'
    metadata:
      custom: []
      groupName: Image
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      deprecated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      name:
        custom: []
        name: name
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      rand:
        custom: []
        name: rand
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
    cleanUrlParameters:
      name: architecto
      rand: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        custom: []
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
  -
    custom: []
    httpMethods:
      - DELETE
    uri: 'api/images/delete/{name}/{driver}/{type}'
    metadata:
      custom: []
      groupName: Image
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      deprecated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      name:
        custom: []
        name: name
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      driver:
        custom: []
        name: driver
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      type:
        custom: []
        name: type
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
    cleanUrlParameters:
      name: architecto
      driver: architecto
      type: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
  -
    custom: []
    httpMethods:
      - GET
    uri: 'api/images/list/private/{group}/{id}'
    metadata:
      custom: []
      groupName: Image
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      deprecated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      group:
        custom: []
        name: group
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      id:
        custom: []
        name: id
        description: 'The ID of the {group}.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
    cleanUrlParameters:
      group: architecto
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        custom: []
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
  -
    custom: []
    httpMethods:
      - GET
    uri: 'api/images/list/public/{group}/{id}'
    metadata:
      custom: []
      groupName: Image
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      deprecated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      group:
        custom: []
        name: group
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      id:
        custom: []
        name: id
        description: 'The ID of the {group}.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
    cleanUrlParameters:
      group: architecto
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        custom: []
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '6000'
          x-ratelimit-remaining: '5984'
          access-control-allow-origin: '*'
        description: null
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
  -
    custom: []
    httpMethods:
      - GET
    uri: 'api/images/public/get/{name}/{rand}'
    metadata:
      custom: []
      groupName: Image
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      deprecated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      name:
        custom: []
        name: name
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      rand:
        custom: []
        name: rand
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
    cleanUrlParameters:
      name: architecto
      rand: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        custom: []
        status: 404
        content: |-
          {
              "message": ""
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '6000'
          x-ratelimit-remaining: '5983'
          access-control-allow-origin: '*'
        description: null
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
